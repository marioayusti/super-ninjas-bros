/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visuales;

import Modelos.*;
import java.awt.*;
import java.util.logging.*;
import javax.swing.*;

/**
 *
 * @author G40
 */
public class Game_PRO extends javax.swing.JFrame {

    boolean[] flagsEst = new boolean[2];
    boolean[] flagsMOV = new boolean[7];
    boolean flagE = true;
    int[] A_XY = new int[3];
    int[] preM = new int[1];
    int C = 0;
    int p;
    String[] ADs;
    String[] AAs;
    String[] L;
    String[] Poss;
    Player Player;
    EnemigoH[] EHs = new EnemigoH[12];
    EBowser EBowser = new EBowser(this.Player);

    /**
     * Creates new form Game_PRO
     */
    public Game_PRO() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(this);
        this.Energia.setMaximum(100);
        this.Energia.setMinimum(0);
        this.Energia.setStringPainted(true);
        this.Energia.setForeground(Color.DARK_GRAY);
        this.Energia.setString("Energia");
//
        this.flagsEst[0] = true;
        this.flagsEst[1] = true;
        this.flagsMOV[0] = true;
        this.flagsMOV[1] = true;
        this.flagsMOV[2] = false;
        this.flagsMOV[3] = true;
        this.flagsMOV[4] = false;
        this.flagsMOV[5] = true;
        this.flagsMOV[6] = false;
        this.preM[0] = 10;
        this.A_XY[0] = 0;
        this.A_XY[1] = 0;
        this.A_XY[2] = 0;
        this.Player = new Player(0, 0, 40, 70, "../Pictures/Happy.gif");
        this.EHs[0] = new EnemigoH(740, 310, 30, 30, 0, 860, -1);
        this.EHs[1] = new EnemigoH(960, 310, 30, 30, 950, 1170, -1);
        this.EHs[2] = new EnemigoH(1140, 310, 30, 30, 950, 1170, -1);
        this.EHs[3] = new EnemigoH(1145, 40, 30, 30, 1145, 1385, 1);
        this.EHs[4] = new EnemigoH(2500, 310, 30, 30, 2461, 2639, -1);
        this.EHs[5] = new EnemigoH(2722, 310, 30, 30, 2721, 2885, 1);
        this.EHs[6] = new EnemigoH(2752, 310, 30, 30, 2721, 2885, 1);
        this.EHs[7] = new EnemigoH(1800, 310, 30, 30, 1300, 2370, -1);
        this.EHs[8] = new EnemigoH(1830, 310, 30, 30, 1300, 2370, 1);
        this.EHs[9] = new EnemigoH(1860, 310, 30, 30, 1300, 2370, 1);
        this.EHs[10] = new EnemigoH(4000, -30, 30, 30, 3910, 4480, -1);
        this.EHs[11] = new EnemigoH(4030, -30, 30, 30, 3910, 4480, -1);
//        (new Thread(new Tiempo(false, this.Tiempo))).start();
        (new Thread(new Coordenadas(this.Player, this.Coordenadas))).start();
    }

    public void Pre1(String[] ADs, String[] AAs, String[] L, String[] Poss, int p) {
        this.ADs = ADs;
        this.AAs = AAs;
        this.L = L;
        this.Poss = Poss;
        this.p = p;
        this.mundo_M1.preferencias(Player, this.Poss, EHs, EBowser, Energia, NumArmas, Vidas, flagsEst, flagsMOV, preM, A_XY, this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Tiempo = new javax.swing.JLabel();
        Coordenadas = new javax.swing.JLabel();
        mundo_M1 = new Visuales.Mundo_M();
        Energia = new javax.swing.JProgressBar();
        NumArmas = new javax.swing.JLabel();
        Vidas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                formKeyReleased(evt);
            }
        });

        Tiempo.setText("Tiempo");

        Coordenadas.setText("Coordenadas");

        javax.swing.GroupLayout mundo_M1Layout = new javax.swing.GroupLayout(mundo_M1);
        mundo_M1.setLayout(mundo_M1Layout);
        mundo_M1Layout.setHorizontalGroup(
            mundo_M1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        mundo_M1Layout.setVerticalGroup(
            mundo_M1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        Energia.setBackground(new java.awt.Color(102, 255, 102));
        Energia.setForeground(new java.awt.Color(102, 255, 102));
        Energia.setValue(10);

        NumArmas.setText("Kunais");

        Vidas.setText("Vidas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Energia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Vidas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Coordenadas)
                .addGap(169, 169, 169)
                .addComponent(NumArmas)
                .addGap(82, 82, 82)
                .addComponent(Tiempo))
            .addComponent(mundo_M1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Tiempo)
                        .addComponent(Coordenadas)
                        .addComponent(NumArmas)
                        .addComponent(Vidas))
                    .addComponent(Energia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mundo_M1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_formKeyPressed
    {//GEN-HEADEREND:event_formKeyPressed

        if (this.flagsMOV[5]) {
            if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_D) {
//                this.Player.setX(this.Player.getX() + this.preM[0]);
                if (this.flagsMOV[1]) {
                    this.Player.setX(this.Player.getX() + this.preM[0]);
                    if (!this.flagsEst[0]) {
                        try {
                            Thread.sleep(25);
                            if (this.C < this.ADs.length) {
                                this.Player.setImagen(new ImageIcon(getClass().getResource(ADs[C])));
                                this.C++;
                            } else {
                                this.C = 0;
                            }
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Mundo_M.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            } else if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_A) {
//                this.Player.setX(this.Player.getX() - this.preM[0]);
                if (flagsMOV[0]) {
                    if (this.Player.getX() > this.A_XY[0]) {
                        this.Player.setX(this.Player.getX() - this.preM[0]);
                    }
                    if (!this.flagsEst[0]) {
                        try {
                            Thread.sleep(25);
                            if (this.C < this.AAs.length) {
                                this.Player.setImagen(new ImageIcon(getClass().getResource(AAs[this.C])));
                                this.C++;
                            } else {
                                this.C = 0;
                            }
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Mundo_M.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            } else if (evt.getKeyCode() == evt.VK_UP || evt.getKeyCode() == evt.VK_W) {
//                this.Player.setY(this.Player.getY() - this.preM[0]);
                if (!this.flagsEst[0]) {
                    this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[1])));
                    new Thread(new Salto(this.flagsEst, this.flagsMOV, this.Player)).start();
                }
            } else if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_S) {
//                this.Player.setY(this.Player.getY() + this.preM[0]);
                if (!this.flagsEst[0]) {
                    this.Player.setAlto(40);
                    if (this.flagE) {
                        this.Player.setY(this.Player.getY() + 30);
                        this.flagE = false;
                    }
                    this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[4])));
                }
            } else if (evt.getKeyCode() == evt.VK_E || evt.getKeyCode() == evt.VK_PAGE_DOWN) {
                if (!this.flagsEst[0]) {
                    this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[3])));
                    new Thread(new SaltoD(this.flagsEst, this.flagsMOV, this.Player)).start();
                }
            } else if (evt.getKeyCode() == evt.VK_Q || evt.getKeyCode() == evt.VK_SHIFT) {
                if (!this.flagsEst[0]) {
                    this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[2])));
                    new Thread(new SaltoA(this.flagsEst, this.flagsMOV, this.Player, this.A_XY)).start();
                }
            }
            if (evt.getKeyCode() == evt.VK_R) {
                if ((this.Player.getEnergia() - 30) >= 0) {
                    new Thread(new Rasengan(this.Player)).start();
                    this.Player.setEnergia(this.Player.getEnergia() - 30);
                }
            }
            if (evt.getKeyCode() == evt.VK_L) {
                if (this.Player.getNumArmas() > 0) {
                    new Thread(new Lanzar(this.Player, this.EHs, this.EBowser, this.L, this.Poss[0])).start();
                }
            }
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_formKeyReleased
    {//GEN-HEADEREND:event_formKeyReleased
        if (this.flagsMOV[5]) {
            if (evt.getKeyCode() == evt.VK_RIGHT || evt.getKeyCode() == evt.VK_D) {
                this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[0])));
            } else if (evt.getKeyCode() == evt.VK_LEFT || evt.getKeyCode() == evt.VK_A) {
                this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[0])));
            } else if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_S) {
                this.Player.setY(this.Player.getY() - 30);
                this.Player.setAlto(70);
                this.flagE = true;
                this.Player.setImagen(new ImageIcon(getClass().getResource(this.Poss[0])));
            }
        }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game_PRO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game_PRO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game_PRO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game_PRO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game_PRO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Coordenadas;
    private javax.swing.JProgressBar Energia;
    private javax.swing.JLabel NumArmas;
    private javax.swing.JLabel Tiempo;
    private javax.swing.JLabel Vidas;
    private Visuales.Mundo_M mundo_M1;
    // End of variables declaration//GEN-END:variables
}
