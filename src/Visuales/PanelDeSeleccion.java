/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visuales;

import Modelos.*;
import static com.sun.prism.impl.PrismSettings.threadCheck;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author G40
 */
public class PanelDeSeleccion extends javax.swing.JPanel
{

    Selector selector;
    Personaje[] Personajes;
    JLabel Caracteristicas;
    Fondo[] fondos = new Fondo[10];
    FondoCM fcm;
    EnemigoH E1;
    Piso p1;
    int a = 0;

    /**
     * Creates new form PanelDeSeleccion
     */
    public PanelDeSeleccion()
    {
        initComponents();
    }

    public void Selector(Selector Selector, Personaje[] Personajes, JLabel Caracteristicas)
    {
        this.selector = Selector;
        this.Personajes = Personajes;
        this.Caracteristicas = Caracteristicas;
        this.fondos[0] = new Fondo(0, 20, 40, 40, "../Pictures/NubeMario.png");
        this.fondos[1] = new Fondo(730, 0, 40, 40, "../Pictures/NubeMario.png");
        this.fondos[2] = new Fondo(150, 100, 100, 40, "../Pictures/NubesMario.png");
        this.fondos[3] = new Fondo(500, 70, 40, 40, "../Pictures/NubeMario.png");
        this.fondos[4] = new Fondo(0, 320, 150, 50, "../Pictures/MontanaMariog.png");
        this.fondos[5] = new Fondo(250, 340, 60, 30, "../Pictures/ArbusMario.png");
        this.fondos[6] = new Fondo(640, 350, 100, 20, "../Pictures/ArbusMariog.png");
        this.fondos[7] = new Fondo(370, 340, 100, 30, "../Pictures/MontanaMario.png");
        this.fondos[8] = new Fondo(560, 250, 30, 30, "../Pictures/BloqueMario1.png");
        this.fondos[9] = new Fondo(170, 300, 50, 70, "../Pictures/Verde.png");
        this.fcm = new FondoCM(740, 340, 30, 30, 0, 760, "../Pictures/HongoP.png", 1);
        this.p1 = new Piso(0, 370, 800, 40, "../Pictures/PisoM.png");
        this.E1 = new EnemigoH(0, 340, 30, 30, 0, 760, 1);
        new Thread(this.E1).start();
        new Thread(this.fcm).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void paint(Graphics g)
    {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
        g.drawImage(this.p1.getImagen().getImage(), this.p1.getX(), this.p1.getY(), this.p1.getAncho(), this.p1.getAlto(), this);
        for (int i = 0; i < this.fondos.length; i++)
            g.drawImage(this.fondos[i].getImagen().getImage(), this.fondos[i].getX(), this.fondos[i].getY(), this.fondos[i].getAncho(), this.fondos[i].getAlto(), this);
        g.drawImage(this.E1.getImagen().getImage(), this.E1.getX(), this.E1.getY(), this.E1.getAncho(), this.E1.getAlto(), this);
        g.drawImage(this.fcm.getImagen().getImage(), this.fcm.getX(), this.fcm.getY(), this.fcm.getAncho(), this.fcm.getAlto(), this);
        if (this.selector != null && this.Personajes != null) {
            if (a < 100) {
                g.drawImage(this.selector.getImagen().getImage(), this.selector.getX(), this.selector.getY(), this.selector.getAncho(), this.selector.getAlto(), this);
                a++;
            }
            else {
                a++;
                if (this.a == 200)
                    this.a = 0;
            }
            g.drawImage(this.Personajes[0].getImagen().getImage(), this.Personajes[0].getX(), this.Personajes[0].getY(), this.Personajes[0].getAncho(), this.Personajes[0].getAlto(), this);
            g.drawImage(this.Personajes[1].getImagen().getImage(), this.Personajes[1].getX(), this.Personajes[1].getY(), this.Personajes[1].getAncho(), this.Personajes[1].getAlto(), this);
            g.drawImage(this.Personajes[2].getImagen().getImage(), this.Personajes[2].getX(), this.Personajes[2].getY(), this.Personajes[2].getAncho(), this.Personajes[2].getAlto(), this);
            g.drawImage(this.Personajes[3].getImagen().getImage(), this.Personajes[3].getX(), this.Personajes[3].getY(), this.Personajes[3].getAncho(), this.Personajes[3].getAlto(), this);
            for (int i = 0; i < this.Personajes.length; i++)
                if (new Rectangle(this.selector.getX(), this.selector.getY(), this.selector.getAncho(), this.selector.getAlto()).intersects(this.Personajes[i].getRectangulo()))
                    if (this.Personajes[i].getTipo() == 0)
                        this.Caracteristicas.setText("Naruto Uzumaki -- Nivel: Genin -- Habilidad especial: Rasengan");
                    else if (this.Personajes[i].getTipo() == 1)
                        this.Caracteristicas.setText("Kakashi Hatake -- Nivel: Jounin -- Habilidad especial: Chidori");
                    else if (this.Personajes[i].getTipo() == 2)
                        this.Caracteristicas.setText("Kakashi Hatake -- Nivel: Anbu Especial -- Habilidad especial: Chidori");
                    else if (this.Personajes[i].getTipo() == 3)
                        this.Caracteristicas.setText("Itachi Uchiha -- Nivel: Anbu Especial(Renegado) -- Habilidad especial: Bola de fuego");
        }

        repaint();
    }

}
